
chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice
$ git config --global user.name "farhantariq916"

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice
$ git config --global user.eamil "farhan.oraxtech@gmail.com"

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
filter.lfs.clean=git-lfs clean -- %f
user.name=farhantariq916
user.email=77972381+farhantariq916@users.noreply.github.com
user.eamil=farhan.oraxtech@gmail.com

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice
$ git config --color.ui auto
error: unknown option `color.ui'
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice
$ git config user.name
farhantariq916

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice
$ git status
fatal: not a git repository (or any of the parent directories): .git

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice
$ git init
Initialized empty Git repository in C:/Users/chfar/Desktop/gitPractice/.git/

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        first.txt

nothing added to commit but untracked files present (use "git add" to track)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        anyexcel.xlsx
        anyword.docx
        first.txt

nothing added to commit but untracked files present (use "git add" to track)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ fit add -a
bash: fit: command not found

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add -a
error: unknown switch `a'
usage: git add [<options>] [--] <pathspec>...

    -n, --dry-run         dry run
    -v, --verbose         be verbose

    -i, --interactive     interactive picking
    -p, --patch           select hunks interactively
    -e, --edit            edit current diff and apply
    -f, --force           allow adding otherwise ignored files
    -u, --update          update tracked files
    --renormalize         renormalize EOL of tracked files (implies -u)
    -N, --intent-to-add   record only the fact that the path will be added later
    -A, --all             add changes from all tracked and untracked files
    --ignore-removal      ignore paths removed in the working tree (same as --no-all)
    --refresh             don't add, only refresh the index
    --ignore-errors       just skip files which cannot be added because of errors
    --ignore-missing      check if - even missing - files are ignored in dry run
    --chmod (+|-)x        override the executable bit of the listed files
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add --a

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   anyexcel.xlsx
        new file:   anyword.docx
        new file:   first.txt


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "Initial commit"
[master (root-commit) 6ac93a1] Initial commit
 3 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 anyexcel.xlsx
 create mode 100644 anyword.docx
 create mode 100644 first.txt

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git log
commit 6ac93a1767fd4d5bbffb39f8e3190dd440b8dcb4 (HEAD -> master)
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 11:48:07 2021 +0500

    Initial commit

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$  git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   first.txt

no changes added to commit (use "git add" and/or "git commit -a")

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$  git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   anyexcel.xlsx
        modified:   first.txt

no changes added to commit (use "git add" and/or "git commit -a")

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$  git add first.txt

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$  git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   first.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   anyexcel.xlsx


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit changed first.txt file"
[master 5fe447b] commit changed first.txt file
 1 file changed, 2 insertions(+)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$  git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   anyexcel.xlsx

no changes added to commit (use "git add" and/or "git commit -a")

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git log
commit 5fe447bf35b85ad827c8ce8be7e4d2654196a26f (HEAD -> master)
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 12:05:27 2021 +0500

    commit changed first.txt file

commit 6ac93a1767fd4d5bbffb39f8e3190dd440b8dcb4
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 11:48:07 2021 +0500

    Initial commit

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add anyexcel.xls
fatal: pathspec 'anyexcel.xls' did not match any files

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add anyexcel.xlsx

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit changed anyexcel.xlsx file"
[master 76024bd] commit changed anyexcel.xlsx file
 1 file changed, 0 insertions(+), 0 deletions(-)
 rewrite anyexcel.xlsx (69%)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git log
commit 76024bdefe34c2a1d5cd3f0600b3861f9988ee7e (HEAD -> master)
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 12:10:17 2021 +0500

    commit changed anyexcel.xlsx file

commit 5fe447bf35b85ad827c8ce8be7e4d2654196a26f
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 12:05:27 2021 +0500

    commit changed first.txt file

commit 6ac93a1767fd4d5bbffb39f8e3190dd440b8dcb4
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 11:48:07 2021 +0500

    Initial commit

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ touch error.log

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        error.log

nothing added to commit but untracked files present (use "git add" to track)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add error.log

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit changed error.log file"
[master 73ef8b2] commit changed error.log file
 1 file changed, 5 insertions(+)
 create mode 100644 error.log

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git log
commit 73ef8b2288a55efd0342bec27e6cc6097f4aae2c (HEAD -> master)
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 13:22:07 2021 +0500

    commit changed error.log file

commit 76024bdefe34c2a1d5cd3f0600b3861f9988ee7e
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 12:10:17 2021 +0500

    commit changed anyexcel.xlsx file

commit 5fe447bf35b85ad827c8ce8be7e4d2654196a26f
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 12:05:27 2021 +0500

    commit changed first.txt file

commit 6ac93a1767fd4d5bbffb39f8e3190dd440b8dcb4
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Date:   Tue Jan 26 11:48:07 2021 +0500

    Initial commit

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$  touch .gitignore

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   error.log

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore

no changes added to commit (use "git add" and/or "git commit -a")

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add --a

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        modified:   error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        modified:   error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        modified:   error.log

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git diff
diff --git a/error.log b/error.log
index 39a349a..6626f15 100644
--- a/error.log
+++ b/error.log
@@ -3,4 +3,5 @@ fsdkfs
 sdfdsfds
 fds
 fdsfdsf
-ds
\ No newline at end of file
+ds
+changed

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git diff -- staged

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git diff --staged
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..4d914ca
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+error.log
\ No newline at end of file
diff --git a/error.log b/error.log
index 65e3da1..39a349a 100644
--- a/error.log
+++ b/error.log
@@ -1,4 +1,5 @@
-sdkfs
+dsgdfgdx
+fsdkfs
 sdfdsfds
 fds
 fdsfdsf

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git rm error.log
error: the following file has staged content different from both the
file and the HEAD:
    error.log
(use -f to force removal)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        modified:   error.log

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add error.log

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   .gitignore
        modified:   error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit 123"
[master 0f77bf8] commit 123
 2 files changed, 5 insertions(+), 2 deletions(-)
 create mode 100644 .gitignore

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git rm error.log
rm 'error.log'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ touch error.log

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add error.log
The following paths are ignored by one of your .gitignore files:
error.log
hint: Use -f if you really want to add them.
hint: Turn this message off by running
hint: "git config advice.addIgnoredFile false"

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ touch anyFile

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        deleted:    error.log

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        anyFile


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add anyFile

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   anyFile
        deleted:    error.log


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit new file"
[master d3d11e2] commit new file
 2 files changed, 7 deletions(-)
 create mode 100644 anyFile
 delete mode 100644 error.log

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git mv anyFile.txt renamed_anyFile
fatal: bad source, source=anyFile.txt, destination=renamed_anyFile

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git rm anyFile
error: the following file has local modifications:
    anyFile
(use --cached to keep the file, or -f to force removal)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   anyFile

no changes added to commit (use "git add" and/or "git commit -a")

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add --a

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit changed anyFile"
[master f82057d] commit changed anyFile
 1 file changed, 1 insertion(+)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git rm anyFile
rm 'anyFile'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ touch second.txt

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git add second.txt

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit new second.txt"
[master cfa6b59] commit new second.txt
 2 files changed, 1 deletion(-)
 delete mode 100644 anyFile
 create mode 100644 second.txt

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git mv second.txt second_renamed.txt

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        renamed:    second.txt -> second_renamed.txt


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit "commit renamed second.txt"
error: pathspec 'commit renamed second.txt' did not match any file(s) known to git

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git commit -m "commit renamed second.txt"
[master ef29a9c] commit renamed second.txt
 1 file changed, 0 insertions(+), 0 deletions(-)
 rename second.txt => second_renamed.txt (100%)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git log --pretty=oneline
ef29a9cd5f74cc59b138b4f308e643cd61481221 (HEAD -> master) commit renamed second.txt
cfa6b59c95afde8514f907c88203698b9d0bdf1c commit new second.txt
f82057d90db76b8221b349c6bafaf9e6ad782f67 commit changed anyFile
d3d11e2a75ea2cb76133de9655af918b3f70576f commit new file
0f77bf85cf78685c2c44713cb9bc023a1ea2c94c commit 123
73ef8b2288a55efd0342bec27e6cc6097f4aae2c commit changed error.log file
76024bdefe34c2a1d5cd3f0600b3861f9988ee7e commit changed anyexcel.xlsx file
5fe447bf35b85ad827c8ce8be7e4d2654196a26f commit changed first.txt file
6ac93a1767fd4d5bbffb39f8e3190dd440b8dcb4 Initial commit

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git log --pretty=short
commit ef29a9cd5f74cc59b138b4f308e643cd61481221 (HEAD -> master)
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit renamed second.txt

commit cfa6b59c95afde8514f907c88203698b9d0bdf1c
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit new second.txt

commit f82057d90db76b8221b349c6bafaf9e6ad782f67
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit changed anyFile

commit d3d11e2a75ea2cb76133de9655af918b3f70576f
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit new file

commit 0f77bf85cf78685c2c44713cb9bc023a1ea2c94c
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git log --pretty=full
commit ef29a9cd5f74cc59b138b4f308e643cd61481221 (HEAD -> master)
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Commit: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit renamed second.txt

commit cfa6b59c95afde8514f907c88203698b9d0bdf1c
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Commit: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit new second.txt

commit f82057d90db76b8221b349c6bafaf9e6ad782f67
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Commit: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit changed anyFile

commit d3d11e2a75ea2cb76133de9655af918b3f70576f
Author: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>
Commit: farhantariq916 <77972381+farhantariq916@users.noreply.github.com>

    commit new file

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git checkout develop
error: pathspec 'develop' did not match any file(s) known to git

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git checkout -b develop
Switched to a new branch 'develop'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$  git status
On branch develop
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    anyexcel.xlsx
        deleted:    anyword.docx
        deleted:    first.txt
        deleted:    second_renamed.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        garbageFile/
        importanFiles/

no changes added to commit (use "git add" and/or "git commit -a")

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git add .

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git status
On branch develop
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        renamed:    first.txt -> garbageFile/first.txt
        renamed:    second_renamed.txt -> garbageFile/second_renamed.txt
        renamed:    anyexcel.xlsx -> importanFiles/anyexcel.xlsx
        renamed:    anyword.docx -> importanFiles/anyword.docx


chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git commit -m "commit new branch"
[develop 576ecb5] commit new branch
 4 files changed, 0 insertions(+), 0 deletions(-)
 rename first.txt => garbageFile/first.txt (100%)
 rename second_renamed.txt => garbageFile/second_renamed.txt (100%)
 rename anyexcel.xlsx => importanFiles/anyexcel.xlsx (100%)
 rename anyword.docx => importanFiles/anyword.docx (100%)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git status
On branch develop
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git checkout master
Switched to branch 'master'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git checkout develop
Switched to branch 'develop'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git branch
* develop
  master

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git checkout master
Switched to branch 'master'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git branch
  develop
* master

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git checkout develop
Switched to branch 'develop'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git commit -a -m "fixed some changes"
On branch develop
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git checkout master
Switched to branch 'master'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git merge develop
Updating ef29a9c..576ecb5
Fast-forward
 first.txt => garbageFile/first.txt                   |   0
 second_renamed.txt => garbageFile/second_renamed.txt |   0
 anyexcel.xlsx => importanFiles/anyexcel.xlsx         | Bin
 anyword.docx => importanFiles/anyword.docx           |   0
 4 files changed, 0 insertions(+), 0 deletions(-)
 rename first.txt => garbageFile/first.txt (100%)
 rename second_renamed.txt => garbageFile/second_renamed.txt (100%)
 rename anyexcel.xlsx => importanFiles/anyexcel.xlsx (100%)
 rename anyword.docx => importanFiles/anyword.docx (100%)

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git remote

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git status
On branch master
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git remote add origin https://github.com/farhantariq916/sampleRepo.git

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git remote
origin

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$ git push -u origin master
Enumerating objects: 30, done.
Counting objects: 100% (30/30), done.
Delta compression using up to 8 threads
Compressing objects: 100% (24/24), done.
Writing objects: 100% (30/30), 13.48 KiB | 1.68 MiB/s, done.
Total 30 (delta 10), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (10/10), done.
To https://github.com/farhantariq916/sampleRepo.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (master)
$  git checkout develop
Switched to branch 'develop'

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git status
On branch develop
nothing to commit, working tree clean

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git remote add developRepo https://github.com/farhantariq916/branchRepositery.git

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git push -u developRepo develop
Enumerating objects: 30, done.
Counting objects: 100% (30/30), done.
Delta compression using up to 8 threads
Compressing objects: 100% (24/24), done.
Writing objects: 100% (30/30), 13.48 KiB | 1.68 MiB/s, done.
Total 30 (delta 10), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (10/10), done.
To https://github.com/farhantariq916/branchRepositery.git
 * [new branch]      develop -> develop
Branch 'develop' set up to track remote branch 'develop' from 'developRepo'.

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git remote
developRepo
origin

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git push -u developRepo master
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'master' on GitHub by visiting:
remote:      https://github.com/farhantariq916/branchRepositery/pull/new/master
remote:
To https://github.com/farhantariq916/branchRepositery.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'developRepo'.

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git pull origin master
From https://github.com/farhantariq916/sampleRepo
 * branch            master     -> FETCH_HEAD
Already up to date.

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git fetch origin

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ git merge origin/master
Already up to date.

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$ ^C

chfar@DESKTOP-D9G4KEE MINGW64 ~/Desktop/gitPractice (develop)
$

